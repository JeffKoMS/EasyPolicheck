@page "/managejobs"
@using EasyPolicheck.Data;
@using System.Text.Json;
@using System.Linq;
@inject JobsService JobsService
@inject NavigationManager NavManager


<h2>Manage Jobs</h2>

@if (JobsInfo == null || JobsInfo.Count() == 0)
{
    <p><em>No jobs found...</em></p>
}
else
{
    <table class="table table-bordered table-striped">
        <thead class="thead-dark">
            <tr>
                <th class="text-center">Title</th>
                <th class="text-center">Source Dir</th>
                <th class="text-center">Destination Dir</th>
                <th class="text-center">Manage</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var job in JobsInfo)
            {
                <tr>
                    <td>@job.JobTitle</td>
                    <td>@job.SourceDir</td>
                    <td>@job.DestDir</td>
                    <td class="text-center" style="width:20%">
                        <button class="btn btn-primary mx-2" @onclick="@(() => NavMe("editjob", job.Id))">Edit</button>
                        <button class="btn btn-danger">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<button class="btn btn-primary" @onclick="@(() => NavMe("addjob", null))">Add Job</button>

@code {
    List<JobInfo> JobsInfo = new List<JobInfo>();
    protected override void OnInitialized()
    {
        var jobs = JobsService.LoadJobs();
        JobsInfo.AddRange(jobs);

    }

    protected void OnAfterRender()
    {

    }

    public void NavMe(string url, string? rId)
    {
        if (rId == null)
        {
            NavManager.NavigateTo(url);
        }
        else
        {
            NavManager.NavigateTo(url + "/" + rId);
        }
    }

}
