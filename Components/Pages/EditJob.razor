@page "/editjob"
@page "/editjob/{EditId}"
@using EasyPolicheck.Data;
@using System.Text.Json;
@using System.Linq;
@inject JobsService JobsService
@inject NavigationManager NavManager

<h3>Edit job information</h3>

<div>
    <label>Job title: </label>
    <input @bind="newJobTitle" />
</div>
<div>
    <label>Source folder </label>
    <input @bind="newSourceDir" />
</div>
<div>
    <label>Output folder: </label>
    <input @bind="newDestDir" />
</div>




<button @onclick="SaveUpdate">Save</button>

@code {

    [Parameter]
    public string? EditId { get; set; }



    string? newJobTitle;
    string? newSourceDir;
    string? newDestDir;
    string? newJobLang = "en-US";

    List<JobInfo> JobsInfo = new List<JobInfo>();

    protected override void OnInitialized()
    {
        var jobs = JobsService.LoadJobs();
        JobsInfo.AddRange(jobs);

        foreach (var editItem in JobsInfo)
        {
            if (editItem.Id == EditId)
            {
                newJobTitle = editItem.JobTitle;
                newSourceDir = editItem.SourceDir;
                newDestDir = editItem.DestDir;
            }
        }
    }



    public void SaveUpdate()
    {
        foreach (var editItem in JobsInfo)
        {
            if (editItem.Id == EditId)
            {
                editItem.JobTitle = newJobTitle;
                editItem.SourceDir = newSourceDir;
                editItem.DestDir = newDestDir;
            }
        }
        
        JobsService.SaveJobs(JobsInfo);
        @* JobsInfo.RemoveAt(3); Just a test*@
        NavMe("managejobs", null);
    }

    public void NavMe(string url, string? rId)
    {
        if (rId == null)
        {
            NavManager.NavigateTo(url);
        }
        else
        {
            NavManager.NavigateTo(url + rId);
        }
    }

}
