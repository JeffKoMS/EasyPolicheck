@page "/managejobs"
@using EasyPolicheck.Data;
@using System.Text.Json;
@using System.Linq;
@inject JobsService JobsService
@inject NavigationManager NavigationManager


<div class="mb-4">
    <h2>Manage Jobs</h2>
    <button class="btn btn-primary" @onclick="@(() => goPage("addjob", string.Empty))">Add Job</button>
</div>

@if (JobsInfo == null || JobsInfo.Count() == 0)
{
    <p><em>No jobs found...</em></p>
}
else
{
    @foreach (var job in JobsInfo)
    {
        <div class="card mb-6">
            <div class="card-body">
                <div class="row">
                    <div class="col">
                        <h5 class="card-title">@job.JobTitle</h5>
                    </div>
                    <div class="col">
                        <button class="btn btn-primary mx-2" @onclick="@(() => goPage("editjob", job.Id))">Edit</button>
                        <button class="btn btn-danger" @onclick="@(() => goPage("deletejob", job.Id))">Delete</button>
                    </div>
                </div>
            </div>
            <ul class="list-group list-group-flush">
                <li class="list-group-item" style="font-size:10pt">@job.SourceDir</li>
                <li class="list-group-item" style="font-size:10pt">@job.DestDir</li>
                <li class="list-group-item">@JobsInfo.IndexOf(job).ToString()</li>
            </ul>
            <div class="card-body">
                <button class="btn btn-primary mx-2" @onclick="@(() => goPage("editjob", job.Id))">Edit</button>
                <button class="btn btn-danger" @onclick="@(() => goPage("deletejob", job.Id))">Delete</button>
            </div>
        </div>
    }
}



@* @if (JobsInfo == null || JobsInfo.Count() == 0)
{
<p><em>No jobs found...</em></p>
}
else
{
<table class="table table-bordered table-striped">
<thead class="thead-dark">
<tr>
<th class="text-center">Title</th>
<th class="text-center">Source</th>
<th class="text-center">Destination</th>
<th class="text-center">Manage</th>
</tr>
</thead>
<tbody>
@foreach (var job in JobsInfo)
{
<tr style="vertical-align: middle">
<td>@job.JobTitle</td>
<td style="font-size:10px">@job.SourceDir</td>
<td style="font-size:10px">@job.DestDir</td>
<td class="text-center" style="width:20%">
<button class="btn btn-primary mx-2" @onclick="@(() => goPage("editjob", job.Id))">Edit</button>
<button class="btn btn-danger" @onclick="@(() => goPage("deletejob", job.Id))">Delete</button>
</td>
</tr>
}
</tbody>
</table>
} *@



@code {
    List<JobInfo> JobsInfo = new List<JobInfo>();
    public bool Collapsed;
    protected override void OnInitialized()
    {
        var jobs = JobsService.LoadJobs();
        JobsInfo.AddRange(jobs);

    }

    void Toggle()
    {
        Collapsed = !Collapsed;
    }

    private void goPage(string url, string rId)
    {
        if (rId == string.Empty)
        {
            NavigationManager.NavigateTo(url);
        }
        else
        {
            NavigationManager.NavigateTo(url + "/" + rId);
        }
    }

}
