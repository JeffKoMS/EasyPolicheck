@page "/addjob"
@using EasyPolicheck.Data;
@using System.Text.Json;
@using System.Text.Json.Nodes;
@using System.Linq;
@inject JobsService JobsService
@inject NavigationManager NavManager

<h3>New job information</h3>

<form>
    <div class="form-group">
        <label>Job title: </label>
        <input type="text" class="form-control" placeholder="Enter a title for this job" @bind="newJobTitle" />
    </div>
    <div class="form-group">
        <label>Source folder </label>
        <input placeholder="Select source directory" @bind="newSourceDir" />
    </div>
    <div class="form-group">
        <label>Output folder: </label>
        <input placeholder="Select an output directory" @bind="newDestDir" />
    </div>
    <div class="form-group">
        <label>Select language: </label>
        <select @bind="newJobLang">
            @foreach (var lang in culture)
            {
                <option value="@lang">@lang</option>
            }
        </select>
    </div>
</form>



<button class="btn btn-primary" @onclick="SaveNew">Save</button>

@code {

    List<JobInfo> JobsInfo = new List<JobInfo>();

    string? newJobTitle;
    string? newSourceDir;
    string? newDestDir;
    string? newJobLang = "en-US";
    IList<string> culture = new List<string> { "en-US", "es-ES", "de-DE", "zh-TW" };

    protected override void OnInitialized()
    {
        Console.WriteLine(NavManager.Uri);
        var jobs = JobsService.LoadJobs();
        JobsInfo.AddRange(jobs);

    }

    public void SaveNew()
    {
        JobsInfo.Add(new JobInfo
            {
                Id = Guid.NewGuid().ToString(),
                JobTitle = newJobTitle,
                SourceDir = newSourceDir,
                DestDir = newDestDir,
                JobLang = newJobLang
            }
        );
        JobsService.SaveJobs(JobsInfo);
        @* JobsInfo.RemoveAt(3); Just a test*@
        NavManager.NavigateTo("/managejobs");
    }

}
